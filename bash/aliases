alias reload='source ~/.config/bash/aliases'
alias ea='vim ~/.config/bash/aliases && reload'

function ht() { 
	history | awk '{a[$2]++}END{for(i in a){print a[i] " " i}}' | sort -rn | head
}

# Pathing
alias ..='cd ..;'
alias ...='.. ..'

if [ $system_name = 'Darwin' ]; then
  function manpdf() { man -t $@ | open -f -a Preview; }
  function osinfo() { 
     x1="$(/usr/bin/sw_vers -productName)"
     x2="$(/usr/bin/sw_vers -productVersion)"
     x3="$(/usr/bin/sw_vers -buildVersion)"
     x4="$(/usr/bin/arch)"
     echo "${x1} - ${x2} - ${x3} - ${x4}"
  }
  alias ls='ls -G'
  alias pubkey='pubkey | pbcopy && echo "Keys copied to clipboard"'
  alias et="m"
  alias doc='cd ~/Documents'
  alias cur='cd ~/Documents/curiousminds'
  alias redis='redis-server > redis.log &'
  alias o='open .'
  alias b='open -a chrome'
  alias trip='tripwire /'
  alias eprof="mate ~/.config"
  alias hidefile='/usr/bin/SetFile -a "V"'
  alias showfile='/usr/bin/SetFile -a "v"'
#  alias startpg='sudo /Library/StartupItems/PostgreSQL/PostgreSQL start'
#  alias readrails="mate `ruby -rubygems -e "puts( ['rails', 'activerecord', 'activeresource', 'actionpack', 'activesupport'].collect { |gem| gems = Gem.source_index.find_name(gem); gems.last.full_gem_path; }.join(' '))"`"
else
  alias ls='ls --color=auto'
fi

# process status
alias tu='top -o cpu' 
alias tm='top -o vsize'

# ls aliases
alias ls='ls $LS_OPTIONS'
alias l='ls $LS_OPTIONS -lh'
alias ll='ls $LS_OPTIONS -lh'
alias la='ls $LS_OPTIONS -lAh'

#Sublime
alias sublime='open -a "Sublime Text 2"'
alias mate='open -a "Sublime Text 2"'

# Ruby
alias irb='irb --readline -r irb/completion'
alias rii='ri -Tf ansi'
alias gemi='sudo gem install --no-rdoc --no-ri'
alias buni='bundle install'
alias s='bundle exec rspec'

# MySQL
alias mysql-start="sudo launchctl load -w /Library/LaunchDaemons/com.mysql.mysqld.plist"
alias mysql-stop="sudo launchctl unload -w /Library/LaunchDaemons/com.mysql.mysqld.plist"

# MongoDB
function mongo-start() {
	launchctl load -w ~/Library/LaunchAgents/org.mongodb.mongod.plist
	launchctl start org.mongodb.mongod
}
function mongo-stop() {
	launchctl stop org.mongodb.mongod
	launchctl unload -w ~/Library/LaunchAgents/org.mongodb.mongod.plist
}

function start_agent() {
  echo "Initializing new SSH agent...";
  /usr/bin/ssh-agent | sed 's/^echo/#echo/' > $SSH_ENV;
  chmod 600 $SSH_ENV;
  . $SSH_ENV;
  /usr/bin/ssh-add;
}
export -f start_agent
ssh-add ~/.ssh/voiceroom.pem 
